from ui.context_menu import CustomContextMenu

# –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –≤—ã–∫–ª—é—á–∞—Ç–µ–ª–µ–π
custom_switches = []  # –∫–∞–∂–¥—ã–π ‚Äî —Å–ª–æ–≤–∞—Ä—å —Å info: canvas, id, pos, type

# === –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –¢–†–Å–•–ü–û–ó–ò–¶–ò–û–ù–ù–û–ì–û –í–´–ö–õ–Æ–ß–ê–¢–ï–õ–Ø ===
def register_three_switch(canvas, x, y, group_id=None):
    switch = {
        "type": "three",
        "position": "middle",
        "canvas": canvas,
        "x": x,
        "y": y,
        "group_id": group_id
    }

    line = canvas.create_line(x - 20, y - 25, x, y, width=2)
    switch["id"] = line

    def on_click(event):
        show_three_switch_menu(event, switch)

    hitbox = canvas.create_rectangle(x - 30, y - 30, x + 10, y + 10, fill="lightgray", stipple="gray25", outline="")
    canvas.tag_bind(line, "<Button-1>", on_click)
    canvas.tag_bind(hitbox, "<Button-1>", on_click)

    custom_switches.append(switch)


# === –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –î–í–£–•–ü–û–ó–ò–¶–ò–û–ù–ù–û–ì–û –í–´–ö–õ–Æ–ß–ê–¢–ï–õ–Ø ===
def register_two_switch(canvas, x, y, group_id=None):
    switch = {
        "type": "two",
        "position": "off",
        "canvas": canvas,
        "x": x,
        "y": y,
        "group_id": group_id
    }

    line = canvas.create_line(x - 20, y - 25, x, y, width=2)
    switch["id"] = line

    def on_click(event):
        show_two_switch_menu(event, switch)

    hitbox = canvas.create_rectangle(x - 30, y - 30, x + 10, y + 10, fill="lightgray", stipple="gray25", outline="")
    canvas.tag_bind(line, "<Button-1>", on_click)
    canvas.tag_bind(hitbox, "<Button-1>", on_click)

    custom_switches.append(switch)

# === –ú–ï–ù–Æ –î–õ–Ø –¢–†–Å–•–ü–û–ó–ò–¶–ò–û–ù–ù–û–ì–û ===
def show_three_switch_menu(event, switch):
    menu = CustomContextMenu(switch["canvas"])
    current = switch["position"]

    # –ü—Ä–æ–≤–µ—Ä–∫–∞: –µ—Å—Ç—å –ª–∏ –≤–∫–ª—é—á—ë–Ω–Ω—ã–π –¥–≤—É—Ö–ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–π –≤ —ç—Ç–æ–º –∂–µ —à–∫–∞—Ñ—É (–ø–æ group_id)
    block_due_to_local_two = any(
        sw["type"] == "two"
        and sw["position"] == "on"
        and sw.get("group_id") == switch.get("group_id")
        for sw in custom_switches
    )

    options = [
        ("on", "Zajet Disconnectorem"),
        ("middle", "Mezipoloha"),
        ("short", "Zazkratovat")
    ]

    for value, label in options:
        disabled = False
        tooltip = None
        highlight = (current == value)
        # üîí –ë–ª–æ–∫: –µ—Å–ª–∏ –≤ cabinet3 –µ—Å—Ç—å short, –Ω–µ–ª—å–∑—è –æ—Ç–∫–ª—é—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π ON
        if switch.get("group_id") == "cabinet3" and current == "on" and value in ("middle", "short"):
            if any(
                sw["type"] == "three"
                and sw is not switch
                and sw.get("group_id") == "cabinet3"
                and sw["position"] == "short"
                for sw in custom_switches
            ):
                disabled = True
                tooltip = "–ù–µ–ª—å–∑—è –æ—Ç–∫–ª—é—á–∏—Ç—å: –¥—Ä—É–≥–æ–π –≤—ã–∫–ª—é—á–∞—Ç–µ–ª—å –∑–∞—Å–∫—Ä–∞—Ç–æ–≤–∞–Ω"
        # –ë–ª–æ–∫–∏—Ä—É–µ–º –ø—Ä—è–º–æ–π –ø–µ—Ä–µ—Ö–æ–¥ on <-> short
        if (current == "on" and value == "short") or (current == "short" and value == "on"):
            disabled = True
            tooltip = "–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞–ø—Ä—è–º—É—é –∏–∑ '–≤–∫–ª.' –≤ '–∑–∞–∑–µ–º–ª–µ–Ω–∏–µ' –∑–∞–ø—Ä–µ—â—ë–Ω ‚Äî —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ 'mezipoloha'"

        # –ë–ª–æ–∫–∏—Ä—É–µ–º –≤—Å—ë, –µ—Å–ª–∏ –¥–≤—É—Ö–ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–π –≤ —ç—Ç–æ–º —à–∫–∞—Ñ—É –≤–∫–ª—é—á—ë–Ω
        elif block_due_to_local_two:
            disabled = True
            tooltip = "–ù–µ–ª—å–∑—è –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å: –¥–≤—É—Ö–ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–π –≤ —ç—Ç–æ–º —à–∫–∞—Ñ—É –≤–∫–ª—é—á—ë–Ω"
        elif value == "on":
            # üîí –ó–∞–ø—Ä–µ—Ç: –µ—Å–ª–∏ –≤ cabinet3 —É–∂–µ –µ—Å—Ç—å 'short', –Ω–µ–ª—å–∑—è –≤–∫–ª—é—á–∞—Ç—å "on" –≤ –¥—Ä—É–≥–∏—Ö —à–∫–∞—Ñ–∞—Ö
            if switch.get("group_id") != "cabinet3":
                if any(
                    sw["type"] == "three"
                    and sw.get("group_id") == "cabinet3"
                    and sw["position"] == "short"
                    for sw in custom_switches
                ):
                    disabled = True
                    tooltip = "–ù–µ–ª—å–∑—è –≤–∫–ª—é—á–∏—Ç—å: –≤ –±–æ–ª—å—à–æ–º —à–∫–∞—Ñ—É —É–∂–µ –µ—Å—Ç—å '–∑–∞—Å–∫—Ä–∞—Ç–æ–≤–∞–Ω–æ'"
        elif value == "short":
            group = switch.get("group_id")

            other_in_group = [
                sw for sw in custom_switches
                if sw["type"] == "three"
                and sw is not switch
                and sw.get("group_id") == group
            ]

            # üîê –£—Å–ª–æ–≤–∏–µ 1 ‚Äî –≤ –≥—Ä—É–ø–ø–µ —É–∂–µ –µ—Å—Ç—å short
            if any(sw["position"] == "short" for sw in other_in_group):
                disabled = True
                tooltip = "–í –≥—Ä—É–ø–ø–µ —É–∂–µ –æ–¥–∏–Ω –≤—ã–∫–ª—é—á–∞—Ç–µ–ª—å –≤ '–∑–∞—Å–∫—Ä–∞—Ç–æ–≤–∞—Ç—å'"

            # üîê –¢–æ–ª—å–∫–æ –¥–ª—è cabinet3: –≤—Ç–æ—Ä–æ–π –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∫–ª—é—á—ë–Ω + –æ—Å—Ç–∞–ª—å–Ω—ã–µ –≤—ã–∫–ª—é—á–µ–Ω—ã
            elif group == "cabinet3":
                # 2. –í—Ç–æ—Ä–æ–π –≤ –≥—Ä—É–ø–ø–µ –Ω–µ –≤–∫–ª—é—á—ë–Ω
                if not any(sw["position"] == "on" for sw in other_in_group):
                    disabled = True
                    tooltip = "–ó–∞—Å–∫—Ä–∞—Ç–æ–≤–∞—Ç—å –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—Ç–æ—Ä–æ–π –≤—ã–∫–ª—é—á–∞—Ç–µ–ª—å –≤–∫–ª—é—á—ë–Ω (ON)"

                # 3. –í –¥—Ä—É–≥–∏—Ö —à–∫–∞—Ñ–∞—Ö –µ—Å—Ç—å –≤–∫–ª—é—á—ë–Ω–Ω—ã–µ
                elif any(
                    sw["type"] == "three"
                    and sw.get("group_id") != "cabinet3"
                    and sw["position"] == "on"
                    for sw in custom_switches
                ):
                    disabled = True
                    tooltip = "–ó–∞—Å–∫—Ä–∞—Ç–æ–≤–∞—Ç—å –Ω–µ–ª—å–∑—è: –≤ –¥—Ä—É–≥–æ–º —à–∫–∞—Ñ—É –≤—ã–∫–ª—é—á–∞—Ç–µ–ª—å —É–∂–µ –≤–∫–ª—é—á—ë–Ω"
        menu.add_option(
            label,
            command=lambda v=value: set_three_switch_position(switch, v),
            enabled=not disabled and not highlight,
            highlight=highlight,
            tooltip_text=tooltip
        )

    menu.show(event.x_root, event.y_root)
    menu.close_on_click_outside()


# === –ú–ï–ù–Æ –î–õ–Ø –î–í–£–•–ü–û–ó–ò–¶–ò–û–ù–ù–û–ì–û ===
def show_two_switch_menu(event, switch):
    menu = CustomContextMenu(switch["canvas"])
    options = [
        ("on", "Zapnout"),
        ("off", "Vypnout")
    ]

    for value, label in options:
        is_current = (switch["position"] == value)
        disabled = False
        tooltip = None

        # üîí –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–ø—Ä–µ—Ç –≤—ã–∫–ª—é—á–µ–Ω–∏—è (off)
        if value == "off" and switch["position"] == "on":
            group = switch.get("group_id")

            if group == "cabinet3":
                # –í—Å–µ —Ç—Ä–µ—Ö–ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–µ –∏–∑ cabinet3
                three_switches = [
                    sw for sw in custom_switches
                    if sw["type"] == "three" and sw.get("group_id") == "cabinet3"
                ]
                one_in_short = any(sw["position"] == "short" for sw in three_switches)
                one_in_on = any(sw["position"] == "on" for sw in three_switches)

                if one_in_short and one_in_on:
                    disabled = True
                    tooltip = "–ù–µ–ª—å–∑—è –≤—ã–∫–ª—é—á–∏—Ç—å: –¥—Ä—É–≥–æ–π –≤—ã–∫–ª—é—á–∞—Ç–µ–ª—å –∑–∞—Å–∫—Ä–∞—Ç–æ–≤–∞–Ω –∏ –æ–¥–∏–Ω –≤–∫–ª—é—á—ë–Ω"
            else:
                # –í –¥—Ä—É–≥–∏—Ö —à–∫–∞—Ñ–∞—Ö: –µ—Å–ª–∏ —Ç—Ä—ë—Ö–ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–π –≤ short
                three_in_short = any(
                    sw["type"] == "three"
                    and sw.get("group_id") == group
                    and sw["position"] == "short"
                    for sw in custom_switches
                )
                if three_in_short:
                    disabled = True
                    tooltip = "–ù–µ–ª—å–∑—è –≤—ã–∫–ª—é—á–∏—Ç—å: –∑–∞—Å–∫—Ä–∞—Ç–æ–≤–∞–Ω–æ ‚Äî –æ—Ç–∫–ª—é—á–∏—Ç–µ –≤—Ä—É—á–Ω—É—é"

        menu.add_option(
            label,
            command=lambda v=value: set_two_switch_position(switch, v),
            enabled=not is_current and not disabled,
            highlight=is_current,
            tooltip_text=tooltip
        )

    menu.show(event.x_root, event.y_root)
    menu.close_on_click_outside()



# === –û–ë–ù–û–í–õ–ï–ù–ò–ï –õ–ò–ù–ò–ò (–¢–†–Å–•–ü–û–ó–ò–¶–ò–û–ù–ù–´–ô) ===
def set_three_switch_position(switch, pos):
    canvas = switch["canvas"]
    x, y = switch["x"], switch["y"]
    current = switch["position"]

    # ‚ùó –ó–∞–ø—Ä–µ—Ç –ø—Ä—è–º–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞ –º–µ–∂–¥—É on –∏ short
    if (current == "on" and pos == "short") or (current == "short" and pos == "on"):
        # –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ ‚Äî —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ "middle"
        return  # –ù–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º, –º–æ–∂–Ω–æ –ø–æ–¥—Å–≤–µ—Ç–∏—Ç—å/–≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ ‚Äî –ø–æ –∂–µ–ª–∞–Ω–∏—é

    # ‚è™ –ï—Å–ª–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è —Ç–µ–∫—É—â–µ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ ‚Äî –Ω–µ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º
    if current == pos:
        return

    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –ª–∏–Ω–∏—é
    canvas.delete(switch["id"])

    coords = {
        "on": (x, y - 25, x, y),
        "middle": (x - 20, y - 25, x, y),
        "short": (x - 40, y, x, y)
    }

    line = canvas.create_line(*coords[pos], width=2)
    canvas.tag_bind(line, "<Button-1>", lambda e: show_three_switch_menu(e, switch))

    switch["id"] = line
    switch["position"] = pos


# === –û–ë–ù–û–í–õ–ï–ù–ò–ï –õ–ò–ù–ò–ò (–î–í–£–•–ü–û–ó–ò–¶–ò–û–ù–ù–´–ô) ===
def set_two_switch_position(switch, pos):
    canvas = switch["canvas"]
    canvas.delete(switch["id"])

    x, y = switch["x"], switch["y"]

    coords = {
        "off": (x - 20, y - 25, x, y),
        "on": (x, y - 25, x, y)
    }

    line = canvas.create_line(*coords[pos], width=2)
    canvas.tag_bind(line, "<Button-1>", lambda e: show_two_switch_menu(e, switch))

    switch["id"] = line
    switch["position"] = pos


def force_turn_off_two_switches_by_group(group_id):
    for sw in custom_switches:
        if sw["type"] == "two" and sw.get("group_id") == group_id:
            set_two_switch_position(sw, "off")